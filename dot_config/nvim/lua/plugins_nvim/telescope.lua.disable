return {
	{ "nvim-telescope/telescope-fzf-native.nvim", build = 'make' }, 
	{ "nvim-telescope/telescope-live-grep-args.nvim" }, 
	{ 
		"nvim-telescope/telescope.nvim", 
		dependencies = {
		},
		config = function()
			local lga_actions = require("telescope-live-grep-args.actions")
			local tele_actions = require("telescope.actions")

			require("telescope").setup {
				extensions = {
					fzf = {},
					live_grep_args = {
						auto_quoting = true, -- enable/disable auto-quoting
						-- define mappings, e.g.
						mappings = { -- extend mappings
							i = {
								["<C-k>"] = lga_actions.quote_prompt(),
								["<C-i>"] = lga_actions.quote_prompt({ postfix = " --iglob " }),
								-- freeze the current list and start a fuzzy search in the frozen list
								["<C-space>"] = lga_actions.to_fuzzy_refine,
							},
						},
						-- ... also accepts theme settings, for example:
						-- theme = "dropdown", -- use dropdown theme
						-- theme = { }, -- use own theme spec
						-- layout_config = { mirror=true }, -- mirror preview pane
					}
				},
			}

			require("telescope").load_extension('fzf')
			require("telescope").load_extension('live_grep_args')
		end, 
	},
	{
		"nvim-telescope/telescope-file-browser.nvim",
		dependencies = { 
			"nvim-lua/plenary.nvim",
		},
		config = function()
			require("telescope").setup {
				extensions = {
					file_browser = {
						depth = 1,
						grouped = false,
						theme = "ivy",
						-- disables netrw and use telescope-file-browser in its place
						hijack_netrw = true,
						mappings = {
							["i"] = {
								-- your custom insert mode mappings
							},
							["n"] = {
								["o"] = require("telescope.actions").select_default, -- instead of opening with Finder
							},
						},
					},
				}
			}
			vim.keymap.set("n", "<space>n", ":Telescope file_browser<CR>")
			vim.keymap.set("n", "<space>f", ":Telescope find_files<CR>")
			vim.keymap.set("n", "<space>lg", ":Telescope live_grep_args<CR>")
		end
	}
}
